[gd_scene load_steps=2 format=3 uid="uid://c0oq4c0ltmgkd"]

[sub_resource type="GDScript" id="GDScript_qiicn"]
script/source = "extends Node2D

const PersonScene = [preload(\"res://scenes/People/person1.tscn\"), preload(\"res://scenes/People/person2.tscn\"), preload(\"res://scenes/People/person3.tscn\")]
@onready var timer: Timer = $Timer

var number = 1

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	timer.timeout.connect(_on_timer_timeout)
	Events.train_gone.connect(_smol_timer)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
	
func _smol_timer(dont_use):
	timer.start(1)

func _on_timer_timeout():
	if Game.people + number > Game.housing_space:
		var game_over = get_tree().get_root().get_node(\"Main/GameOver\")
		game_over.get_node(\"MessageLabel\").text = \"Without enough housing people were heartbroken!\\nGAME OVER :(\"
		game_over.get_node(\"MessageLabel\").modulate = Color(255,0,0)
		game_over.set_visible(true)
		get_tree().get_root().get_node(\"Main/UI\").set_visible(false)
		#fix for crash
		#get_tree().get_root().get_node(\"Main/Control\").set_visible(false)
	for i in range(randi_range(number,4*number)):
		Game.people += 1
		var direction = randi_range(0,4)
		var randp = randi_range(0,2)
		var person = PersonScene.pick_random().instantiate()
		person.position = position
		person.direction = direction
		get_tree().current_scene.add_child(person)
		if i%3 == 0:
			await get_tree().create_timer(0.2).timeout
	number += 1
		
"

[node name="PeopleGenerator" type="Node2D"]
script = SubResource("GDScript_qiicn")

[node name="Timer" type="Timer" parent="."]
one_shot = true
